/**
 * Created by lyle on 14-4-13.
 */



exports.doCompile = function(socket,clientCode)
{
    var spawn = require("child_process").spawn;
    var codeFile = require("./staticVar.js").getCodeFileName();
    var gcc = spawn('gcc',[codeFile,'-g','-std=c99']);//这一句不能写到外面, 否则编译的是上次的结果
    //var gcc = spawn('gcc',[codeFile,'-g','-std=c99','-o','a.out']);
    var str = "";
    console.log('开始编译');
    gcc.stdout.setEncoding('utf8');
    gcc.stderr.setEncoding('utf8');

    gcc.stderr.on('data',function(data)
    {
        str=str+data;
        console.log("gcc 标准出错:"+data);
    });
    gcc.stdout.on('data',function(data){
        str = str+data;
    });

    gcc.on('exit',function(code,signal){

        console.log("gcc 退出: code:"+code+"\t"+"siganl:"+signal);

        var status = {
            index:0,
            gccOutput:str,
            gdbOutput:{},
            detailString:""
        };

        /*非正常退出,标准出错有输出, 代码有错误*/
        if(code == 0)
        {
            status.index = 2;
            status.detailString = "编译成功";
        }
        else if(code == 1)
        {
            status.index = 3;
            status.detailString = "编译出错,请修改代码";
        }
        console.log('编译过程完成');
        socket.emit('status',status);

        if(clientCode.index == 2)
        {
            require('./runProgram.js').runProgram(socket);
        }
            require('./gdb.js').interactive(socket);
    });
};